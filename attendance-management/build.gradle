/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    id 'com.bmuschko.clover' version '2.2.3'
    id 'java'
}


subprojects{
    apply plugin: "java"
    apply plugin: "com.bmuschko.clover"
    repositories {
        jcenter()
    }
    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    dependencies {
        // Use JUnit Jupiter for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
        testImplementation 'org.junit.platform:junit-platform-launcher:1.6.2'
        // This dependency is used by the application.
        implementation 'com.google.guava:guava:30.1.1-jre'
        clover 'org.openclover:clover:4.4.1'
        implementation 'org.json:json:20210307'
        implementation 'com.jcraft:jsch:0.1.55'
        implementation 'mysql:mysql-connector-java:5.1.37'
        // implementation 'mysql:mysql-connector-java:8.0.19'
        implementation 'com.alibaba:druid:1.1.10'
        //  implementation 'org.apache.commons:commons-dbutils:1.6' 
        implementation 'commons-dbutils:commons-dbutils:1.8.1'
    }
    clover{
        compiler{
            additionalArgs = "-g:lines,source,vars"
        }
    }
    test{
        testLogging{
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
    test {
        // Use junit platform for unit tests
        useJUnitPlatform()
    }

}

// Project specific stuff
project (':shared'){
    dependencies {
        implementation 'org.json:json:20171018'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'
        implementation 'com.google.code.gson:gson:2.10.1'
    }
}
project (':server'){
    dependencies {
        implementation project(':shared')
//        testImplementation project(path: ':shared', configuration: "testPkg")
    }
}
project (':client'){
    dependencies {
        implementation project(':shared')
//        testImplementation project(path: ':shared', configuration: "testPkg")
    }
}
project (':userAdmin'){
    dependencies {
        implementation project(':shared')
    }
}
project (':courseManage'){
    dependencies {
        implementation project(':shared')
    }
}
project (':profClient'){
    dependencies {
        implementation project(':shared')
    }
}
clover {
    report{
        xml=true
        html=true
    }
}

tasks.register("run-server") {
    dependsOn project('server').getTasksByName('run',false)
    group = 'Run Client/Server'
    description = 'Run the Server'
}

tasks.register("run-client") {
    dependsOn project('client').getTasksByName('run',false)
    group = 'Run Client/Server'
    description = 'Run the Client'
}

tasks.register("run-userAdmin") {
    dependsOn project('userAdmin').getTasksByName('run',false)
    group = 'Run userAdmin'
    description = 'Run the userAdmin'
}

tasks.register("run-courseManage") {
    dependsOn project('courseManage').getTasksByName('run',false)
    group = 'Run courseManager'
    description = 'Run the courseManage'
}

tasks.register("run-profClient") {
    dependsOn project('profClient').getTasksByName('run',false)
    group = 'Run profClient'
    description = 'Run the profClient'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
tasks.register("resolveDependencies") {
    dependsOn project('server').getTasksByName('resolveDependencies',false)
    dependsOn project('client').getTasksByName('resolveDependencies',false)
    dependsOn project('userAdmin').getTasksByName('resolveDependencies',false)
    dependsOn project('courseManage').getTasksByName('resolveDependencies',false)
    dependsOn project('profClient').getTasksByName('resolveDependencies',false)
    group = 'Build'
    description = 'Resolve/Download Dependencies'
}
